{"version":3,"file":"static/css/main.0fbbc5a2.css","mappings":"AAAA,KAGI,yBACA,WACA,eACA,gBALA,QAKA,CAGJ,UAPI,mCAQA,CAGJ,OACI,oBAGJ,KACI,mCClBJ,MACI,kBAAmB,CACnB,iBAAkB,CAClB,eAAgB,CAChB,qBAAsB,CACtB,sBAAuB,CACvB,+BAAgC,CAChC,qCAAsC,CACtC,6CAAmD,CACnD,yCAAkD,CAClD,gBAAiB,CACjB,YAAgB,CAChB,gBAAiB,CACjB,oBAAqB,CAGzB,YAEI,oDADA,iCACA,CAGJ,EACI,WACA,qBACA,4BAGJ,QACI,WAGJ,WAQA,iBACI,CARA,0BAIA,iBAGJ,CAJI,eACA,CAHA,uFAOA,YAQA,iBACA,CARA,0BAOA,kBADJ,eACI,CAPA,sFAQA,YAQA,kBARA,0BAQA,kBADA,eACA,CARA,oFAQA,YAWA,iBAGJ,CAdI,yBAEA,CAQA,iBACA,CAFA,eACA,CARA,yFAYJ,cAGI,mBAFA,YACA,sBACA,0GAKA,oDAIA,CATA,wBASA,4KAGJ,6EAEQ,6CACA,GAMA,gDANA,mDACA,4CAIJ,iCACI,6BAPA,sDAQA,2GAEA,kCAZR,0BAEQ,sCACA,GAMA,gDANA,mDACA,4CAIJ,iCACI,6BASJ,sDARI,2GAEA,kCAMJ,iIAGJ,qEAGQ,+CAMA,qDACA,CAPA,2DACA,oDAEA,kCAGA,0BACA,IAPA,gDAOA,mDACA,4CAXR,iCACI,yBAEI,wCAMA,qDACA,CAPA,2DACA,oDAEA,kCAGA,0BACA,IAQJ,gDARI,mDACA,4CAMR,iCACI,iHAII,8DAIA,oCACA,GALA,UAKA,0BAPR,mBAEQ,IAIA,UAJA,0BACA,mBAGA,6BACA,GAIJ,UAJI,0BAIJ,wKAKI,+DAIA,qCACA,GALA,UAKA,0BAPR,mBAEQ,IAIA,UAJA,0BACA,mBAGA,8BACA,uHClJR,sBAUE,6BADA,eADA,+BAJA,OAQA,0BAXA,eAIA,QAFA,MAQA,SACA,CAGF,gDAbE,aAIA,sBACA,6BAaA,CALF,0BAGE,mBAFA,gBAIA,CCkCE,wBDvCJ,0BAOI,mBACA,mBAIJ,6BAEE,mBADA,aAEA,uBAEA,0BADA,aACA,CCsBE,wBD3BJ,6BAOI,WAGF,kCAKE,oBAIJ,8DARI,6BACA,YAEA,WADA,cAcF,CARF,4BAQE,kBAFA,kBADA,2BAGA,CAEA,kCACE,WEzDJ,0BASI,4DAJA,kDAFA,8CACA,qCAIA,wGADA,aALA,eAIA,YALA,YAQA,CD6CA,wBCtDJ,0BAYQ,aADA,WACA,EAIR,8BACI,kBAGJ,yBAOI,wDACA,2DAFA,8CADA,+CAJA,YAEA,kBACA,MAFA,UAMA,CAGJ,8BAGI,eADA,mCADA,aAEA,CAGJ,gCAGI,mBADA,aAGA,YADA,yBAHA,cAIA,CAGJ,sCACI,YAGJ,8BAII,mBAHA,6BACA,YACA,aAEA,uBACA,YAGJ,oCAEI,uBAGJ,kCACI,UAIJ,yBACI,wIAEJ,2CACI,GACI,UAEJ,IACI,WAEJ,GACI,WARR,mCACI,GACI,UAEJ,IACI,WAEJ,GACI,WAIR,iCAOI,cADA,+BAFA,kBAHA,UAEA,gBAEA,qBAHA,UAKA,CC5FJ,kCASE,8DADA,mCAKA,WARA,YAFA,OAQA,UAVA,eACA,MAUA,wBAFA,kBANA,UASA,CAGF,yCAEE,UACA,wBAFA,kBAEA,CAGF,wCACE,gBACA,kBACA,gBAGF,+BACE,gBACA,SACA,UAEA,kCACE,aACA,oCACE,cAIJ,mCAEE,YADA,UACA,CC1CJ,kCACE,wBAGF,sCAKE,cAJA,eAEA,gBADA,yBAEA,wJACA,CAEA,4CACE","sources":["styles/index.scss","styles/App.scss","components/header/header.module.scss","styles/_breakpoints.scss","components/terminal/terminal.module.scss","components/HeaderInfo/header-info.module.scss","components/ProjectIndex/project-index.module.scss"],"sourcesContent":["body {\n    margin: 0;\n    font-family: 'JetBrainsMono', monospace;\n    background-color: #1a1b1e;\n    color: white;\n    font-size: 14px;\n    font-weight: 400;\n}\n\ncode {\n    font-family: 'JetBrainsMono', monospace;\n}\n\nbutton {\n    font-family: inherit;\n}\n\nhtml {\n    -webkit-font-smoothing: antialiased;\n}\n",":root {\n    --font-regular: 400;\n    --font-medium: 500;\n    --font-bold: 700;\n    --font-extra-bold: 800;\n    --terminal-radius: 10px;\n    --terminal-border-color: #6c6c6c;\n    --terminal-tools-border-color: #424242;\n    --terminal-background-color: rgba(17, 17, 17, 0.89);\n    --terminal-tools-background-color: rgb(31, 31, 31);\n    --orange: #E95420;\n    --white: #ffffff;\n    --accent: #712cf9;\n    --colorBrand: #6e32e1;\n}\n\n::selection {\n    color: var(--accent);\n    background-color: var(--white);\n}\n\na {\n    color: white;\n    text-decoration: none;\n    transition: opacity .2s ease;\n}\n\na:hover {\n    opacity: .6;\n}\n\n@font-face {\n    font-family: 'JetBrainsMono';\n    src: url('../fonts/JetBrainsMono-Regular.woff2') format('woff2');\n    font-weight: 400;\n    font-style: normal;\n    font-display: swap;\n}\n\n@font-face {\n    font-family: 'JetBrainsMono';\n    src: url('../fonts/JetBrainsMono-Medium.woff2') format('woff2');\n    font-weight: 500;\n    font-style: normal;\n    font-display: swap;\n}\n\n@font-face {\n    font-family: 'JetBrainsMono';\n    src: url('../fonts/JetBrainsMono-Bold.woff2') format('woff2');\n    font-weight: 700;\n    font-style: normal;\n    font-display: swap;\n}\n\n@font-face {\n    font-family: 'JetBrainsMono';\n    src: url('../fonts/JetBrainsMono-ExtraBold.woff2') format('woff2');\n    font-weight: 800;\n    font-style: normal;\n    font-display: swap;\n}\n\n.home-banner {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    height: 100vh;\n}\n\n.logo svg {\n    width: 100px;\n    height: 100px;\n    animation: rotation-infinite 4s linear infinite both;\n}\n\n.App-link {\n    color: var(--white);\n    text-decoration: none;\n}\n\n.slide-out-blurred-bottom {\n    animation: slide-out-blurred-bottom 0.45s cubic-bezier(0.755, 0.050, 0.855, 0.060) both;\n}\n\n@keyframes slide-out-blurred-bottom {\n    0% {\n        transform: translateY(0) scaleY(1) scaleX(1);\n        transform-origin: 50% 50%;\n        filter: blur(0);\n        opacity: 1;\n        /*visibility: hidden;*/\n    }\n    100% {\n        transform: translateY(1000px) scaleY(2) scaleX(0.2);\n        transform-origin: 50% 100%;\n        filter: blur(40px);\n        opacity: 0;\n        /*visibility: visible;*/\n    }\n}\n\n.slide-in-blurred-bottom {\n    animation: slide-in-blurred-bottom 0.6s cubic-bezier(0.230, 1.000, 0.320, 1.000) both;\n}\n\n@keyframes slide-in-blurred-bottom {\n    0% {\n        /*visibility: visible;*/\n        transform: translateY(1000px) scaleY(2.5) scaleX(0.2);\n        transform-origin: 50% 100%;\n        filter: blur(40px);\n        opacity: 0;\n    }\n    100% {\n        transform: translateY(0) scaleY(1) scaleX(1);\n        transform-origin: 50% 50%;\n        filter: blur(0);\n        opacity: 1;\n        /*visibility: visible;*/\n    }\n}\n\n.scale-in-center {\n    animation: scale-in-center 0.6s cubic-bezier(0.770, 0.000, 0.175, 1.000) both;\n}\n@keyframes scale-in-center {\n    0% {\n        transform: scale(0);\n        opacity: 1;\n    }\n    100% {\n        transform: scale(1);\n        opacity: 1;\n    }\n}\n.scale-out-center {\n    animation: scale-out-center 0.4s cubic-bezier(0.770, 0.000, 0.175, 1.000) both;\n}\n\n@keyframes scale-out-center {\n    0% {\n        transform: scale(1);\n        opacity: 1;\n    }\n    100% {\n        transform: scale(0);\n        opacity: 1;\n    }\n}\n","@use \"src/styles/breakpoints\";\n\n.header {\n  position: fixed;\n  display: flex;\n  top: 0;\n  left: 0;\n  right: 0;\n  flex-direction: column;\n  justify-content: space-between;\n  font-weight: var(--font-medium);\n  font-size: 12px;\n  background-color: transparent;\n  z-index: 1;\n  mix-blend-mode: difference;\n}\n\n.headerInfo {\n  padding: 5px 10px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  flex-direction: column;\n  @include breakpoints.media-breakpoint-up(lg) {\n    flex-direction: row;\n    padding: 10px 15px;\n  }\n}\n\n.headerInfoBox {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 5px 0;\n  mix-blend-mode: difference;\n  @include breakpoints.media-breakpoint-up(lg) {\n    padding: 0;\n  }\n\n  span {\n    background-color: transparent;\n    border: none;\n    cursor: pointer;\n    color: white;\n    font-weight: inherit;\n  }\n}\n\n.headerAction {\n  border: none;\n  background-color: transparent;\n  color: white;\n  cursor: pointer;\n  transition: opacity .4s ease;\n  position: relative;\n  //z-index: 2;\n  font-size: inherit;\n\n  &:hover {\n    opacity: .6;\n  }\n}\n","$grid-breakpoints: (\n        xs: 0,\n        sm: 576px,\n        md: 768px,\n        lg: 992px,\n        xl: 1200px,\n        xxl: 1400px\n) !default;\n\n@function breakpoint-next($name, $breakpoints: $grid-breakpoints, $breakpoint-names: map-keys($breakpoints)) {\n  $n: index($breakpoint-names, $name);\n  @if not $n {\n    @error \"breakpoint `#{$name}` not found in `#{$breakpoints}`\";\n  }\n  @return if($n < length($breakpoint-names), nth($breakpoint-names, $n + 1), null);\n}\n\n// Minimum breakpoint width. Null for the smallest (first) breakpoint.\n//\n//    >> breakpoint-min(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px, xxl: 1400px))\n//    576px\n@function breakpoint-min($name, $breakpoints: $grid-breakpoints) {\n  $min: map-get($breakpoints, $name);\n  @return if($min != 0, $min, null);\n}\n\n// Maximum breakpoint width.\n// The maximum value is reduced by 0.02px to work around the limitations of\n// `min-` and `max-` prefixes and viewports with fractional widths.\n// See https://www.w3.org/TR/mediaqueries-4/#mq-min-max\n// Uses 0.02px rather than 0.01px to work around a current rounding bug in Safari.\n// See https://bugs.webkit.org/show_bug.cgi?id=178261\n//\n//    >> breakpoint-max(md, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px, xxl: 1400px))\n//    767.98px\n@function breakpoint-max($name, $breakpoints: $grid-breakpoints) {\n  $max: map-get($breakpoints, $name);\n  @return if($max and $max > 0, $max - .02, null);\n}\n\n// Returns a blank string if smallest breakpoint, otherwise returns the name with a dash in front.\n// Useful for making responsive utilities.\n//\n//    >> breakpoint-infix(xs, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px, xxl: 1400px))\n//    \"\"  (Returns a blank string)\n//    >> breakpoint-infix(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px, xxl: 1400px))\n//    \"-sm\"\n@function breakpoint-infix($name, $breakpoints: $grid-breakpoints) {\n  @return if(breakpoint-min($name, $breakpoints) == null, \"\", \"-#{$name}\");\n}\n\n// Media of at least the minimum breakpoint width. No query for the smallest breakpoint.\n// Makes the @content apply to the given breakpoint and wider.\n@mixin media-breakpoint-up($name, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($name, $breakpoints);\n  @if $min {\n    @media (min-width: $min) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Media of at most the maximum breakpoint width. No query for the largest breakpoint.\n// Makes the @content apply to the given breakpoint and narrower.\n@mixin media-breakpoint-down($name, $breakpoints: $grid-breakpoints) {\n  $max: breakpoint-max($name, $breakpoints);\n  @if $max {\n    @media (max-width: $max) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Media that spans multiple breakpoint widths.\n// Makes the @content apply between the min and max breakpoints\n@mixin media-breakpoint-between($lower, $upper, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($lower, $breakpoints);\n  $max: breakpoint-max($upper, $breakpoints);\n\n  @if $min != null and $max != null {\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  } @else if $max == null {\n    @include media-breakpoint-up($lower, $breakpoints) {\n      @content;\n    }\n  } @else if $min == null {\n    @include media-breakpoint-down($upper, $breakpoints) {\n      @content;\n    }\n  }\n}\n\n// Media between the breakpoint's minimum and maximum widths.\n// No minimum for the smallest breakpoint, and no maximum for the largest one.\n// Makes the @content apply only to the given breakpoint, not viewports any wider or narrower.\n@mixin media-breakpoint-only($name, $breakpoints: $grid-breakpoints) {\n  $min:  breakpoint-min($name, $breakpoints);\n  $next: breakpoint-next($name, $breakpoints);\n  $max:  breakpoint-max($next, $breakpoints);\n\n  @if $min != null and $max != null {\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  } @else if $max == null {\n    @include media-breakpoint-up($name, $breakpoints) {\n      @content;\n    }\n  } @else if $min == null {\n    @include media-breakpoint-down($next, $breakpoints) {\n      @content;\n    }\n  }\n}\n","@use \"src/styles/_breakpoints.scss\";\n\n.terminal {\n    z-index: 9999;\n    position: fixed;\n    border: 1px solid var(--terminal-border-color);\n    border-radius: var(--terminal-radius);\n    background-color: var(--terminal-background-color);\n    width: 340px;\n    height: 300px;\n    filter: drop-shadow(0px 12px 20px rgba(0, 0, 0, 0.48));\n    backdrop-filter: blur(2px);\n    @include breakpoints.media-breakpoint-up(lg) {\n        width: 540px;\n        height: 380px;\n    }\n}\n\n.terminalText {\n    padding: 15px 20px;\n}\n\n.toolbox {\n    height: 36px;\n    width: 100%;\n    position: absolute;\n    top: 0;\n    border-top-right-radius: var(--terminal-radius);\n    border-top-left-radius: var(--terminal-radius);\n    background-color: var(--terminal-tools-background-color);\n    border-bottom: 1px solid var(--terminal-tools-border-color);\n}\n\n.toolboxName {\n    margin: 0 auto;\n    font-weight: var(--font-extra-bold);\n    font-size: 0.9em;\n}\n\n.toolboxButtons {\n    padding: 0 10px;\n    display: flex;\n    align-items: center;\n    justify-content: flex-end;\n    height: 100%;\n}\n\n.toolboxButtons:hover {\n    cursor: move;\n}\n\n.closeButton {\n    background-color: transparent;\n    border: none;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    padding: 5px;\n}\n\n.closeButton:hover {\n    //filter: invert(1);\n    fill: var(--colorBrand);\n}\n\n.closeButton svg {\n    fill: white;\n    //fill: var(--orange);\n}\n\n.pulsate {\n    animation: pulsate 0.5s ease-in-out infinite both;\n}\n@keyframes pulsate {\n    0% {\n        opacity: 1;\n    }\n    50% {\n        opacity: 0.1;\n    }\n    100% {\n        opacity: 1;\n    }\n}\n\n.terminalCaption {\n    padding: 0;\n    width: 100%;\n    text-align: left;\n    line-break: strict;\n    white-space: pre-line;\n    font-weight: var(--font-medium);\n    font-size: 1em;\n}\n",".infoContainer {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  //z-index: 1000;\n  //background-color: rgba(0, 0, 0, 0.56);\n  background-color: rgba(23, 23, 23, 0.66);\n  backdrop-filter: blur(23px);\n  visibility: hidden;\n  opacity: 0;\n  transition: all .6s ease;\n  color: white;\n}\n\n.infoContainerVisible {\n  visibility: visible;\n  opacity: 1;\n  transition: all .4s ease;\n}\n\n.infoContainerLayout {\n  max-width: 768px;\n  padding: 60px 15px;\n  text-align: left;\n}\n\n.socialList {\n  list-style: none;\n  margin: 0;\n  padding: 0;\n\n  li {\n    margin: 4px 0;\n    a {\n      color: inherit;\n    }\n  }\n\n  svg {\n    width: 14px;\n    height: 14px;\n  }\n}\n",".projectIndex {\n  padding: 180px 15px 40px;\n}\n\n.projectIndexItem {\n  font-size: 36px;\n  text-transform: uppercase;\n  font-weight: 500;\n  transition: transform .2s ease-in-out;\n  display: block;\n\n  &:hover {\n    transform: skewX(-16deg);\n    //transform: translateX(12px);\n  }\n}\n"],"names":[],"sourceRoot":""}